---
- name: Create config directory
  file: path={{ conf_dir }} state=directory

- name: Preconfigure puppet
  template: src=puppet.conf.j2 dest={{ conf_dir }}/puppet.conf

- name: Install packages
  apt: name={{ item }} update_cache=true install_recommends=no
  with_items:
  - nginx-light
  - puppetmaster
  - unicorn
  notify: Restart nginx

- name: Install puppetdb terminus
  apt: name={{ item }} install_recommends=no
  with_items:
  - puppetdb-terminus
  when: puppetmaster_use_puppetdb

- name: Configure connection to puppetdb
  template: src=puppetdb.conf.j2 dest={{ conf_dir }}/puppetdb.conf
  notify: Reload unicorn
  when: puppetmaster_use_puppetdb

- name: Configure puppet routes
  template: src=routes.yaml.j2 dest={{ conf_dir }}/routes.yaml
  notify: Reload unicorn
  when: puppetmaster_use_puppetdb

- name: Configure rack
  copy: src=config.ru dest={{ lib_dir }}/config.ru
  notify: Reload unicorn

- name: Configure unicorn defaults
  template: src=unicorn.default.j2 dest=/etc/default/unicorn
  notify: Reload unicorn

- name: Configure unicorn
  template: src=unicorn.conf.rb.j2 dest={{ unicorn_conf_file }}
  notify: Reload unicorn

- name: Stop puppetmaster
  service: name=puppetmaster state=stopped

- name: Disable autostart of puppetmaster
  copy: src=default dest=/etc/default/puppetmaster

- meta: flush_handlers

- name: Start unicorn
  service: name=unicorn state=started

- name: Configure nginx
  template: src=nginx_vhost.conf.j2 dest=/etc/nginx/sites-enabled/puppetmaster
  notify: Restart nginx

- meta: flush_handlers

- name: Start nginx
  service: name=nginx state=started
